<div id="sidebar">
    <h4>Select data to view:</h4>
    <hr>
    <ul>
        <li><a href="/generation" id="generation-link">Generation</a></li>
        <li><a href="/emissions" id="emissions-link">Emissions</a></li>
    </ul>
    <hr>
    <h5>Select a year to view:</h5>
    <select onchange="update_emissions_graphs();" name="years" id="year-dropdown">
        {{#each years}}
            <option value="{{this}}">{{this}}</option>
        {{/each}}
    </select>
    
</div>
<div id="content" style="background-color: whitesmoke; padding: 20px; border-radius: 5px; margin-bottom: 20px; margin-left: 17.5rem;">
    <h1 style="color: rgb(98, 95, 95);">Welcome to the Generation and Emissions Analytics Dashboard!</h1>
    <p style="color: rgb(98, 95, 95);">This dashboard analyzes U.S. Department of Energy power generation and emissions trends over time. Navigate to the sidebar to start exploring the data!</p>
	<div id="emissions-date"></div>
	<div id="emissions-type"></div>
</div>
<script>
    // Embed plotly graphs in update_emissions_graphs() function so that they can be called from handlebars on select update
    function update_emissions_graphs() {
        // Fetch data from the API and build the line graphs
        fetch('/api/data_daily').then(function(response) {
        return response.json();
        }).then(function(data) {
            // Fetch the element to embed the graph and the year selected
            year = document.getElementById('year-dropdown').value;
            date_div = document.getElementById('emissions-date');
			type_div = document.getElementById('emissions-type');

            var date_content = {
                x: data.date,
                y: data.co2_emissions
            };

            var date_layout = {
                title: {
                    text: `Carbon Emissions Generated by Date for ${year} (Metric Tons)`,
                    xanchor: 'right'
                },
                xaxis: {
                    title: 'Date',
                    range: [`${year}-01-01`, `${year}-12-31`],
                    type: 'date'
                },
                yaxis: {
                    title: 'CO2 Emissions Generated (Metric Tons)'
                }
            };

			var type_content = [
				{
					x: data.date,
					y: data.co2_emissions_col,
					name: 'Coal'
				},
				{
					x: data.date,
					y: data.co2_emissions_ng,
					name: 'Natural Gas'
				},
				{
					x: data.date,
					y: data.co2_emissions_oil,
					name: 'Oil'
				}]

			var type_layout = {
                title: {
                    text: `Carbon Emissions Generated by Type for ${year} (Metric Tons)`,
                    xanchor: 'right'
                },
                xaxis: {
                    title: 'Date',
                    range: [`${year}-01-01`, `${year}-12-31`],
                    type: 'date'
                },
                yaxis: {
                    title: 'CO2 Emissions Generated (Metric Tons)'
                }
            };

            // Build the line graphs
            Plotly.newPlot( date_div, [date_content], date_layout);
			Plotly.newPlot( type_div, type_content, type_layout);
        }).catch(function(err) {
        console.log('Fetch Error :-S', err);
        });
    }

    update_emissions_graphs();
</script>